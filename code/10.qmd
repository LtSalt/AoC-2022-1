---
title: "10 neu"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Dependencies

```{r}
if(!"pacman" %in% installed.packages()) install.packages("pacman")
pacman::p_load(tidyverse, here)
```

## Part 1

### With Test Data

Load Data

```{r}
#| warning: false

test <- read_table(here("data", "10-test.txt"),
                   col_names = c("cmd", "add"))
test
```

calculate current value per command

```{r}
test_commands <- test %>% 
  mutate(add = ifelse(is.na(add), 0, add),
         current = ifelse(row_number() == 1, 1, lag(add))) %>% 
  summarise(cmd, 
            current = accumulate(current, sum))

test_commands
```

duplicate rows by command, creating circles

```{r}
test_cycles <- test_commands %>% 
  mutate(times = ifelse(cmd == "noop", 1, 2)) %>% 
  uncount(times) %>% 
  mutate(cycle = row_number()) %>% 
  select(cycle, value = current)

test_cycles
```

perform check

```{r}
test_cycles %>% 
  filter(cycle %% 40 == 20) %>% 
  summarise(signal_strength = cycle * value) %>% 
  sum()
```

### With Input Data

```{r}
#| warning: false

input <- read_table(here("data", "10.txt"),
                   col_names = c("cmd", "add"))

commands <- input %>% 
  mutate(add = ifelse(is.na(add), 0, add),
         current = ifelse(row_number() == 1, 1, lag(add))) %>% 
  summarise(cmd, 
            current = accumulate(current, sum))

cycles <- commands %>% 
  mutate(times = ifelse(cmd == "noop", 1, 2)) %>% 
  uncount(times) %>% 
  mutate(cycle = row_number()) %>% 
  select(cycle, value = current)

cycles %>% 
  filter(cycle %% 40 == 20) %>% 
  summarise(signal_strength = cycle * value) %>% 
  sum()
```

## Part 2

With test data

```{r}
draw <- function(value, i, length) {
  vec <- rep(".", length)
  
  if(value >= 2) {
    vec[seq(value - 1, value + 1)] <- "#"
  } 
  else if(value == 1) {
    vec[c(value, value + 1)] <- "#"
  }
  else {
    vec[value + 1] <- "#"
  } 
  
  vec[[i]]
}

test_pattern <- test_cycles %>% 
  mutate(value = value + 1) %>% 
  group_by(slot = ceiling(row_number() / 40)) %>% 
  group_split() %>% 
  map(~ .x %>% 
        summarise(pattern = imap_chr(value, ~ draw(.x, .y, nrow(test_cycles))))) %>% 
  map(~ .x %>% pull(pattern) %>% paste0(collapse = "")) %>% 
  bind_cols() %>% 
  t()

test_pattern
```

With input data

```{r}
pattern <- cycles %>% 
  mutate(value = value + 1) %>% 
  group_by(slot = ceiling(row_number() / 40)) %>% 
  group_split() %>% 
  map(~ .x %>% 
        summarise(pattern = imap_chr(value, ~ draw(.x, .y, nrow(test_cycles))))) %>% 
  map(~ .x %>% pull(pattern) %>% paste0(collapse = "")) %>% 
  bind_cols() %>% 
  t()

pattern
```
