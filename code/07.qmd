---
title: "Advent of Code 2022 - Day 07"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Instructions

-   Given a file tree and given file sizes,

    -   find all directories that have a size of 10000 or greater and sum their sizes

## Dependencies

```{r}
if(!"pacman" %in% installed.packages()) install.packages("pacman")
pacman::p_load(tidyverse, here)
```

## Parse Data

```{r}
prompt <- read_csv(here("data", "07.txt"),
         col_names = "prompt")

prompt %>% print(n = 20)
```

## Wrangle Data

```{r}
get_absolute_paths <- function(relative_paths) {
  absolute_path <- function(out, input) {
    if(is.na(input)) return(out)
    if(input == "..") return(str_extract(out, ".+(?=\\/\\w+$)"))
    paste(out, input, sep = "/")
  }
  accumulate(relative_paths, absolute_path)
}

directories <- prompt %>% 
  extract(col = prompt, into = c("dir"), 
          regex = "((?<=cd ).*)", remove = FALSE) %>% 
  mutate(dir = get_absolute_paths(dir)) %>%
  filter(!str_detect(prompt, "\\$ cd|\\$ ls")) %>%
  mutate(prompt = ifelse(str_detect(prompt, "^dir "),
                         paste(dir, str_sub(prompt, 5), sep = "/"),
                         str_extract(prompt, "^[0-9]+"))) %>% 
  group_by(dir) %>% 
  summarise(subdirs = prompt[str_detect(prompt, "^/")] %>% list(),
            file_size = prompt[str_detect(prompt, "^[0-9]+")] %>% as.integer() %>% sum())

directories
```

## Analyze Data

```{r}
get_full_size <- function(root, directories) {
  info <- directories %>% filter(dir == root)
  if(length(unlist(info$subdirs)) == 0) {
    dir_info <- info %>% mutate(size = file_size)
    return(dir_info)
  }
  dir_info <- map(unlist(info$subdirs), ~ get_full_size(.x, directories)) %>%
    bind_rows()
  info$size <- info$file_size + sum(dir_info$file_size)
  dir_info <- bind_rows(dir_info, info)
  return(dir_info)
}

dir_info <- get_full_size(root = "/", directories) %>% 
  select(-c(subdirs, file_size)) %>% 
  arrange(dir)
```

## Questions

1)  

```{r}
dir_info %>% 
  filter(size <= 100000) %>% 
  summarise(size_total = sum(size))
```

2)  

```{r}
directories_processed %>% 
  filter(size >= 30000000 - (70000000 - dir_info$size[1])) %>% 
  filter(size == min(size))
```
