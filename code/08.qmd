---
title: "Advent of Code 2022 - Day 08"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Dependencies

```{r}
if(!"pacman" %in% installed.packages()) install.packages("pacman") 
pacman::p_load(tidyverse, here)
```

## Test Data

```{r}
grid <- read_csv("30373
25512
65332
33549
35390",
         col_names = "pattern") %>% 
  pull("pattern") %>% 
  str_split("") %>% 
  map(as.integer) %>% 
  do.call(rbind, .) %>% 
  as.data.frame() %>% 
  as_tibble()
```

Reminder:

-   map: data as input, applies function to each element in data

-   do.call: function as input, supplies all elements in data as arguments to function

## Wrangle Data

Create the function

```{r}
get_all_visibles <- function(df, from = c("top", "bottom", "left", "right")) {
  
  get_visibles <- function(vec) {
    reduce(vec, function(x, y) {
      clean <- x[!is.na(x)]
      if(y > clean[length(clean)]) return(append(x, y))
      return(append(x, NA))
    })
  }
  
  get_visibles_from <- function(df, direction) {
    if(direction == "bottom") df <- map_df(df, rev)
    if(direction == "left") df <- df %>% t() %>% as_tibble()
    if(direction == "right") df <- df %>% t() %>% as_tibble() %>% map_df(rev)
    
    visibles <- map_df(df, get_visibles)
    
    if(direction == "bottom") visibles <- map_df(visibles, rev)
    if(direction == "left") visibles <- visibles %>% t() %>% as_tibble()
    if(direction == "right") visibles <- visibles %>% map_df(rev) %>% t() %>% as_tibble()

    return(visibles)
  }
  
  visibles <- map(from, ~ get_visibles_from(df, .x))
  
  pmap_df(visibles, function(top, bottom, left, right) {
    pmap_int(list(top, bottom, left, right), function(el1, el2, el3, el4) {
    if(!is.na(el1)) return(el1) 
    if(!is.na(el2)) return(el2) 
    if(!is.na(el3)) return(el3) 
    if(!is.na(el4)) return(el4)
    return(NA)
    })
  })
}
```

Apply the function

```{r}
grid %>% 
  get_all_visibles() %>% 
  map_int(~ sum(!is.na(.x))) %>% 
  sum()
```

## Real Data

```{r}
grid <- read_csv(here("data", "08.txt"),
                 col_names = "pattern") %>% 
  pull("pattern") %>% 
  str_split("") %>% 
  map(as.integer) %>% 
  do.call(rbind, .) %>% 
  as.data.frame() %>% 
  as_tibble()
```

Question 1:

```{r}
grid %>% 
  get_all_visibles() %>% 
  map_int(~ sum(!is.na(.x))) %>% 
  sum()
```
